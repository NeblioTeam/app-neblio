name: CI

on: [push, pull_request]

jobs:
  job_build:
    name: Compilation
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build
        run: |
          make COIN=neblio && mv bin/ neblio-bin/
          make clean
          make COIN=bitcoin_testnet_legacy && mv bin/ bitcoin-testnet-bin/

      - name: Upload Neblio app binary
        uses: actions/upload-artifact@v2
        with:
          name: neblio-app
          path: neblio-bin

      - name: Upload Bitcoin Testnet app binary
        uses: actions/upload-artifact@v2
        with:
          name: bitcoin-testnet-app
          path: bitcoin-testnet-bin

  job_test:
    name: Tests
    needs: job_build
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/speculos:latest
      ports:
        - 1234:1234
        - 9999:9999
        - 40000:40000
        - 41000:41000
        - 42000:42000
        - 43000:43000
      options: --entrypoint /bin/bash

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Download Neblio app binary
        uses: actions/download-artifact@v2
        with:
          name: neblio-app
          path: tests/bitcoin-bin

      - name: Download Bitcoin Testnet app binary
        uses: actions/download-artifact@v2
        with:
          name: bitcoin-testnet-app
          path: tests/bitcoin-testnet-bin

      - name: Run tests
        run: |
          cd tests && pip install -r requirements.txt && SPECULOS=/speculos/speculos.py pytest
          
  job_build_debug:
    name: Build debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build
        run: |
          make DEBUG=1
      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: boilerplate-app-debug
          path: bin
          
  job_scan_build:
    name: Clang Static Analyzer
    needs: job_build_debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build
